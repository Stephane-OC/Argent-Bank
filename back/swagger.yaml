swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

 # New: Create a Transaction
  /transactions:
    post:
      tags:
        - Transactions
      summary: Create a New Transaction
      description: Allows a user to create a financial transaction on their account.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewTransaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid transaction data

  # New: Get Transactions for a Specific Account
  /transactions/{accountId}:
    get:
      tags:
        - Transactions
      summary: Get Transactions for a Specific Account
      description: Retrieves a list of transactions for a specific account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '404':
          description: Account not found

    # New: Update Transaction Category
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update Transaction Category
      description: API to update the category of a financial transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Unique identifier of the transaction to update.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionCategory'
      responses:
        '200':
          description: Transaction category updated successfully.
        '400':
          description: Invalid transaction category data.
        '401':
          description: Unauthorized.
        '404':
          description: Transaction not found.

  # New: Update Transaction Notes
  /transactions/{transactionId}/notes:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update Transaction Notes
      description: API to update the notes of a financial transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Unique identifier of the transaction to update.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionNotes'
      responses:
        '200':
          description: Transaction notes updated successfully.
        '400':
          description: Invalid transaction notes data.
        '401':
          description: Unauthorized.
        '404':
          description: Transaction not found.
          
    # New: Delete Transaction
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete a Transaction
      description: API to delete a financial transaction.
      parameters:
        - in: path
          name: transactionId
          type: string
          required: true
          description: Unique identifier of the transaction to delete.
      responses:
        '200':
          description: Transaction deleted successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Transaction not found.

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
        
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  NewUser:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - firstName
      - lastName
      - email
      - password
  
  UserOperationResponse:
    type: object
    properties:
      status:
        type: integer
        description: Status code of the operation
      message:
        type: string
        description: Message describing the result of the operation
      data:
        type: object
        properties:
          userId:
            type: string
            description: ID of the user who was updated or deleted

  NewTransaction:
    type: object
    properties:
      accountId:
        type: string
        description: Unique identifier of the account on which the transaction is performed.
      type:
        type: string
        enum: [deposit, debit, payment, transfer]
        description: Type of transaction (deposit, withdrawal, payment, transfer).
      amount:
        type: number
        description: Amount of the transaction.
      date:
        type: string
        format: date-time
        description: Date and time when the transaction was performed.
    required:
      - accountId
      - type
      - amount
      - date

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier of the transaction.
      accountId:
        type: string
        description: Unique identifier of the account associated with the transaction.
      type:
        type: string
        enum: [deposit, debit, payment, transfer]
        description: Type of transaction performed.
      amount:
        type: number
        description: Amount of the transaction.
      date:
        type: string
        format: date-time
        description: Date and time of the transaction.

  UpdateTransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: The new category for the transaction.
    required:
      - category

  UpdateTransactionNotes:
    type: object
    properties:
      notes:
        type: string
        description: The new notes for the transaction.
    required:
      - notes

  DeleteTransaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier of the transaction to be deleted.
    required:
      - id      